---
name: Deploy NativeLink Docs
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

permissions: read-all

jobs:
  deploy:
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-24.04, macos-14 ]
    name: Docs Deployment / ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout
        uses: >- # v4.1.1
          actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11

      - name: Install Nix
        uses: >- # v10
          DeterminateSystems/nix-installer-action@de22e16c4711fca50c816cc9081563429d1cf563

      - name: Cache Nix derivations
        uses: >- # v4
          DeterminateSystems/magic-nix-cache-action@fc6aaceb40b9845a02b91e059ec147e78d1b4e41

      - name: Test deployment on Ubuntu
        if: matrix.os == 'ubuntu-24.04' && github.event_name == 'pull_request'
        working-directory: docs
        run: |
          nix develop --impure --command bash -c "
            bun staging --project=nativelink-docs --org=nativelink
          "

      - name: Test deployment on macOS
        if: matrix.os == 'macos-14' && github.event_name == 'pull_request'
        working-directory: docs
        run: |
          nix develop --impure --command bash -c "bun setup && bun run build"


      - name: Production deployment
        if: matrix.os == 'ubuntu-22.04' && github.ref == 'refs/heads/main'
        working-directory: docs
        run: |
          nix develop --impure --command bash -c "
            bun prod --project=nativelink-docs --org=nativelink
          "
