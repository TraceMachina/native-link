{
  "stores": {
    "CAS_MAIN_STORE": {
      "memory": {
        "eviction_policy": {
          // 1gb.
          "max_bytes": 1000000000,
        }
      }
    },
    "AC_MAIN_STORE": {
      "memory": {
        "eviction_policy": {
          // 100mb.
          "max_bytes": 100000000,
        }
      }
    },
    "WORKER_FAST_SLOW_STORE": {
      "fast_slow": {
        // "fast" must be a "filesystem" store because the worker uses it to make
        // hardlinks on disk to a directory where the jobs are running.
        "fast": {
          "filesystem": {
            "content_path": "/tmp/turbo_cache/data-worker-test/content_path-cas",
            "temp_path": "/tmp/turbo_cache/data-worker-test/tmp_path-cas",
            "eviction_policy": {
              // 10gb.
              "max_bytes": 10000000000,
            }
          }
        },
        "slow": {
          "ref_store": {
            "name": "CAS_MAIN_STORE",
          }
        }
      }
    }
  },
  "schedulers": {
    "MAIN_SCHEDULER": {
      "simple": {
        "supported_platform_properties": {
          "cpu_count": "Minimum",
          "memory_kb": "Minimum",
          "network_kbps": "Minimum",
          "disk_read_iops": "Minimum",
          "disk_read_bps": "Minimum",
          "disk_write_iops": "Minimum",
          "disk_write_bps": "Minimum",
          "shm_size": "Minimum",
          "gpu_count": "Minimum",
          "gpu_model": "Exact",
          "cpu_vendor": "Exact",
          "cpu_arch": "Exact",
          "cpu_model": "Exact",
          "kernel_version": "Exact",
          "docker_image": "Priority",
        }
      }
    }
  },
  "workers": [{
    "local": {
      "worker_api_endpoint": {
        "uri": "grpc://127.0.0.1:50061",
      },
      "cas_fast_slow_store": "WORKER_FAST_SLOW_STORE",
      "ac_store": "AC_MAIN_STORE",
      "work_directory": "/tmp/turbo_cache/work",
      "platform_properties": {
        "cpu_count": {
          "values": ["16"],
        },
        "memory_kb": {
          "values": ["500000"],
        },
        "network_kbps": {
          "values": ["100000"],
        },
        "cpu_arch": {
          "values": ["x86_64"],
        },
        "docker_image": {
          "query_cmd": "docker images --format {{.Repository}}:{{.Tag}}",
        }
      }
    }
  }],
  "servers": [{
    "listen_address": "0.0.0.0:50051",
    "services": {
      "cas": {
        "main": {
          "cas_store": "WORKER_FAST_SLOW_STORE"
        }
      },
      "ac": {
        "main": {
          "ac_store": "AC_MAIN_STORE"
        }
      },
      "execution": {
        "main": {
          "cas_store": "WORKER_FAST_SLOW_STORE",
          "scheduler": "MAIN_SCHEDULER",
        }
      },
      "capabilities": {
        "main": {
          "remote_execution": {
            "scheduler": "MAIN_SCHEDULER",
          }
        }
      },
      "bytestream": {
        "cas_stores": {
          "main": "WORKER_FAST_SLOW_STORE",
        },
        // According to https://github.com/grpc/grpc.github.io/issues/371 16KiB - 64KiB is optimal.
        "max_bytes_per_stream": 64000, // 64kb.
      },
      "prometheus": {
        "path": "/metrics"
      }
    }
  }, {
    "listen_address": "0.0.0.0:50061",
    "services": {
      // Note: This should be served on a different port, because it has
      // a different permission set than the other services.
      // In other words, this service is a backend api. The ones above
      // are a frontend api.
      "worker_api": {
        "scheduler": "MAIN_SCHEDULER",
      }
    }
  }],
  "global": {
    "max_open_files": 512
  }
}
